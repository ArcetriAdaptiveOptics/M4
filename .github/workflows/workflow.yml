name: Example workflow for Codecov
on:
    push:
        paths-ignore:
          - 'm4/misc/**'
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #, macos-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.7'
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.7
    - name: Generate coverage report
      run: |
        sudo apt-get install -y xvfb libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
        pip install codecov
        pip install pytest
        pip install pytest-cov
        if ([ -f requirements.txt ]); then pip install -r requirements.txt; fi
         xvfb-run pytest --cov=./ --cov-report=xml
         codecov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
#      with:
#        token: ${{ secrets.CODECOV_TOKEN }}
#        files: ./coverage1.xml,./coverage2.xml
#        directory: ./coverage/reports/
#        flags: unittests
#        env_vars: OS, PYTHON, NUMPY
#        name: codecov-umbrella
#        fail_ci_if_error: true
#        path_to_write_report: ./coverage/codecov_report.txt
#        verbose: true

# nell'install -y xvfb e xvfb-run
